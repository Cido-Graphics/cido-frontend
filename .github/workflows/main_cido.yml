# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy Node.js app to Azure Web App - cido

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read #This is required for actions/checkout

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js version
        uses: actions/setup-node@v3
        with:
          node-version: "22.x"

      - name: npm install, build, and test
        run: |
          npm install --force
          npm run build --if-present
          npm run test --if-present

      - name: Prepare deployment package
        run: |
          mkdir -p ${{ github.workspace }}/deploy_package
          # Copy build output
          cp -r .next ${{ github.workspace }}/deploy_package/
          # Copy public assets if you have them at the root
          if [ -d "public" ]; then cp -r public ${{ github.workspace }}/deploy_package/; fi
          # Copy package files for Azure to install dependencies
          cp package.json ${{ github.workspace }}/deploy_package/
          cp package-lock.json ${{ github.workspace }}/deploy_package/
          # Copy Next.js config if it exists
          if [ -f "next.config.js" ]; then cp next.config.js ${{ github.workspace }}/deploy_package/; fi
          # Create the zip file from within the deploy_package directory
          cd ${{ github.workspace }}/deploy_package && zip -r ../release.zip .

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: node-app
          # Make sure the path points to the release.zip in the workspace root
          path: ${{ github.workspace }}/release.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: "Production"
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: node-app
          path: ${{ github.workspace }}/artifact_download # Download to a specific folder

      - name: "Deploy to Azure Web App"
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: "cido"
          slot-name: "Production" # Or your staging slot
          package: ${{ github.workspace }}/artifact_download/release.zip # Path to the downloaded zip
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_9B30DA89A2B249CFBD4621F7258391E0 }}
